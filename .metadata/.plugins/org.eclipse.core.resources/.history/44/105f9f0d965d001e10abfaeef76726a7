package controllers;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import models.Empleado;

public class EmpleadoController {

public String createUsuario(String nombres, String apellidos, String ciudad) {
		
		SessionFactory sessionFactory = new Configuration().configure("hibernate.cfg.xml").addAnnotatedClass(Usuario.class).buildSessionFactory();
		
		Session session = sessionFactory.openSession();
	
		try {
			Usuario usuario = new Usuario(nombre,apellido,ciudad);
			
			session.beginTransaction();
			session.save(usuario);
			session.getTransaction().commit();
			sessionFactory.close();
			
			return "Usuario creado";
		}
		
		catch (Exception e){
			e.printStackTrace();
		}
		
		return "Error al registrar creado";
	}
	
	public String deleteUsuario(int idusuario) {
		
		SessionFactory sessionFactory = new Configuration().configure("hibernate.cfg.xml").addAnnotatedClass(Usuario.class).buildSessionFactory();

		Session session = sessionFactory.openSession();
		
		try {
			
			session.beginTransaction();
			Usuario usuario = session.get(Usuario.class, idusuario);
			session.delete(usuario);
			session.getTransaction().commit();
			sessionFactory.close();
			
			return "Usuario eliminado correctamente";
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
		return "Error al eliminar usuario";
	}
	
	public String updateUsuario(int idusuario, String nombre) {
		
		SessionFactory sessionFactory = new Configuration().configure("hibernate.cfg.xml").addAnnotatedClass(Usuario.class).buildSessionFactory();
		
		Session session = sessionFactory.openSession();
		
		try {
			
			session.beginTransaction();
			
			Usuario usuario = session.get(Usuario.class, idusuario);
			usuario.setNombre(nombre);
			session.update(usuario);
			session.getTransaction().commit();
			
			sessionFactory.close();
			
			return "Usuario actualizado correctamente";
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
		return "Error al actualizar usuario";
	}
	
	public String getUsuario(int idusuario) {
		
		SessionFactory sessionFactory = new Configuration().configure("hibernate.cfg.xml").addAnnotatedClass(Usuario.class).buildSessionFactory();
		
		Session session = sessionFactory.openSession();
		
		try {
			
			session.beginTransaction();
			Usuario usuario = session.get(Usuario.class, idusuario);
			session.getTransaction().commit();
			sessionFactory.close();
			
			return "Usuario encontrado";
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		
		return "Usuario no encontrado";
		
	}
}
